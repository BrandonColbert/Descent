class Function<TArgs: [...any], TReturn> {
	implement Call<TArgs, TReturn>

	name: string { get }
	visibility: Visibility { get }
	parameters: Parameter[] { get }
	returnType: Type { get }

	new(callable: Call<TArgs, TReturn>)
}

implement Call<TArgs: [...any], TReturn> for Function<TArgs, TReturn> {
	op call(args: ...TArgs): TResult => this(...args)
}

let p = new Function<[...string], none>(print)
p("Hello")